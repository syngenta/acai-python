version: 2.1
commands:
    setup-artifacts:
        steps:
            - run: mkdir reports && mkdir reports/unit-tests && mkdir reports/tests || exit 0
    python-install:
        steps:
            - run: pip install pipenv
            - run: pipenv install
    python-test-install:
        steps:
            - restore_cache:
                key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - run: pip install pipenv
            - run: pipenv install --dev
            - save_cache:
                key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
                paths:
                    - ".venv"
    python-lint:
        steps:
            - run: mkdir coverage && mkdir coverage/lint || exit 0
            - run: python3 -m pipenv run lint | python3 -m pipenv run pylint_report.py > ./coverage/lint/report.html || exit 0
            - store_artifacts:
                path: ./coverage/lint/report.html
    python-test:
        steps:
            - run: pipenv run test
    python-report:
        steps:
            - run: pipenv run coverage
            - store_test_results:
                path: ./coverage/reports
            - store_artifacts:
                path: ./coverage
    pypi-setup:
        steps:
            - run: echo -e "[pypi]" >> ~/.pypirc
            - run: echo -e "username = __token__" >> ~/.pypirc
            - run: echo -e "password = $PYPI_TOKEN" >> ~/.pypirc
    pypi-deploy:
        steps:
            - run: python3 -m pip install --user --upgrade setuptools wheel
            - run: python3 setup.py sdist bdist_wheel
            - run: python3 -m pip install --user --upgrade twine
            - run: python3 -m twine upload dist/* --verbose
jobs:
    install-build-test:
        docker:
            - image: cimg/python:3.8.9
        steps:
            - checkout
            - python-test-install
            - setup-artifacts
            - python-lint
            - python-test
            - python-report
    install-build-deploy:
        docker:
            - image: cimg/python:3.8.9
        steps:
            - checkout
            - python-install
            - pypi-setup
            - pypi-deploy
workflows:
    install-build-deploy-workflow:
        jobs:
            - install-build-deploy:
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/
    install-build-test-workflow:
        jobs:
            - install-build-test:
                filters:
                    tags:
                        ignore: /.*/
